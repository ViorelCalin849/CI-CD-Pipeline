name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: |
          npm install

      - name: Create artifact directory
        run: |
          mkdir -p artifact

      - name: Copy files to artifact directory
        run: |
          rsync -av --progress . artifact --exclude artifact --exclude .git

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: artifact/

      - name: Notify Discord on build failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const webhookUrl = process.env.DISCORD_WEBHOOK_URL;
            const message = {
              content: `**Build failed** for \`${process.env.GITHUB_REPOSITORY}\` on branch \`${process.env.GITHUB_REF_NAME}\`. Check the details here: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}.`
            };
            fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(message)
            });
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: Install dependencies
        run: |
          npm install

      - name: Ensure mocha is executable
        run: |
          chmod +x node_modules/.bin/mocha

      - name: Run tests
        run: |
          npx mocha tests

      - name: Notify Discord on test failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const webhookUrl = process.env.DISCORD_WEBHOOK_URL;
            const message = {
              content: `**Tests failed** for \`${process.env.GITHUB_REPOSITORY}\` on branch \`${process.env.GITHUB_REF_NAME}\`. Check the details here: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}.`
            };
            fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(message)
            });
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact

      - name: Deploy to staging environment
        run: |
          echo "No deployment step for this sample project"

      - name: Notify Discord on deployment failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const webhookUrl = process.env.DISCORD_WEBHOOK_URL;
            const message = {
              content: `**Deployment failed** for \`${process.env.GITHUB_REPOSITORY}\` on branch \`${process.env.GITHUB_REF_NAME}\`. Check the details here: ${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}.`
            };
            fetch(webhookUrl, {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify(message)
            });
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
